[Local Paths]
# You can write paths in Windows format or Linux/POSIX format.
# A trailing '/' at the end of the final directory in a POSIX path
# or a '\' at the end of the final directory of a Windows path
# does not interfere with the path parser.

# Just an example of a subdirectory
local_sub_dir = C:\Users\ssiegmun\starter\subdir

[Values]
# Some config values

preset_value = not_a_number

[Log level colors]
# Default colors of log levels which are output to the user.
# Acceptable values are the keywords from the AnsiParser class
# in https://github.com/Delgan/loguru/blob/master/loguru/_colorizer.py
# e.g. 'black', 'red', 'green', 'cyan', 'white' ...
# optionally prefixed with 'light-', e.g. 'light-blue', 'light-yellow' etc.
# You can also add style and background, e.g. 'light-green, underline, LIGHT-BLACK'
# Separate the words with a comma and a space.
# Value 'normal' can be used to disable color highlighting.

log_level_unimportant = light-black
log_level_procedure = cyan
log_level_info = white
log_level_success = green
log_level_important = yellow
log_level_warning = light-magenta
log_level_error = red
log_level_critical = RED

[Highlight colors]
# Certain words or substrings in log lines will be highlighted
# and temporarily override the log line's default color.
# Use the same color-defining rules as in the section Log level colors
# to define the colors of each highlight type.

highlight_good = green
highlight_bad = light-red
highlight_noteworthy = yellow
highlight_accent = light-yellow
highlight_dim = light-black
highlight_app_version = light-white
highlight_careful = magenta

[Highlight keywords]
# Define which words or substrings will be highlighted with which highlight type.
# Separate words with a comma and a space.
# These keywords are highlighted only in certain predefined output lines
# where they are expected, e.g. when retrieved as values from RSI properties.
# Defining a keyword here guarantees by no means
# that it would also be highlighted in any other output line.
# Experts: You can use regular expressions here, but they must not contain ', '
# because this is used as a keyword separator. If needed, use '\ \,' in the regex.

keywords_good = installed, executable, running, successfully, OK
keywords_bad = failed, unavailable, stopped
keywords_noteworthy = 
keywords_accent = 
keywords_dim = 
keywords_app_version = 
keywords_careful = 

